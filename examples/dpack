#! /bin/bash

# Pack ralsh and supporting files so they can be copied into a Docker
# container. This works on Fedora 25, provided you have the following
# packages installed:
#
# dnf install upx glibc-static libxml2-static zlib-static xz-static libselinux-static
#
# Also, you need to install puppet-agent to build this (we only use that
# for the static libs for augeas, since regrettably Fedora does not ship
# augeas-static yet, see
# https://bugzilla.redhat.com/show_bug.cgi?id=1405600)
#

topdir=$(readlink --canonicalize $(dirname $0)/..)

# Build everything
cd ${abs_top_builddir:-$topdir/build}

if [ ! -f CMakeCache.txt ]; then
    echo "set abs_top_builddir to the directory where libral is built"
    exit 1
fi

srcdir=$(grep SOURCE_DIR CMakeCache.txt | cut -d = -f 2)
githash=$(cd $srcdir && git describe --always)

make

# Reduce the executable as best we can
cd bin
strip -R .note -R .comment -R .eh_frame -R .eh_frame_hdr -s  ralsh mruby mirb
[ -x upx ] && upx ralsh

cd ..
rm -rf ral
mkdir -p ral/bin
cp ./bin/ralsh ral/bin/ralsh.bin
cp ./bin/mruby ./bin/mirb ral/bin
cat > ral/bin/ralsh <<'EOF'
#! /bin/bash
topdir=$(readlink --canonicalize $(dirname $0)/..)
export RALSH_DATA_DIR=$topdir/data
export RALSH_LIBEXEC_DIR=$topdir
exec $topdir/bin/ralsh.bin "$@"
EOF
chmod a+x ral/bin/ralsh

cat > ral/README <<EOF
This is a statically linked build of https://github.com/puppetlabs/libral.

It was made from commit $githash of that repo on a $(cat /etc/system-release)
machine. The executable should work on any $(uname -m) Linux machine
that has $(rpm -q glibc) or later.
EOF

cp -pr ${topdir}/data ral
# Snarf up some augeas lenses that we need
lns_src=/usr/share/augeas/lenses/dist
cp -p $lns_src/sep.aug $lns_src/util.aug $lns_src/rx.aug $lns_src/build.aug ral/data/lenses
rm -rf ral/data/lenses/tests

find ral/ -name \*~ -delete

tarball=ralsh-$(date +%Y-%m-%dT%H.%M)-$githash.tgz
tar czf $tarball ral
echo
echo Made $tarball
echo

echo
echo To run ralsh inside a container, run
echo
echo   docker cp $PWD/ral '<container>:/tmp'
echo   docker exec '<container>' /bin/sh -c /tmp/ral/bin/ralsh
