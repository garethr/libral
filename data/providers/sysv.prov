#! /bin/bash

# A provider for SysV-style init systems

# Very important so that sorting goes right
export LANG=C

svc_path=/etc/rc.d/init.d

# this will only work on Red Hat. We use the status function from there
[ -f /etc/init.d/functions ] && source /etc/init.d/functions

# die MESSAGE
# Print an error message and exit
die() {
    echo "ral_error: $1"
    echo "ral_eom"
    exit 0
}

is_suitable() {
    [ -f /etc/init.d/functions ] || return 1
    type -p service chkconfig > /dev/null || return 1
    # Do not use this provider if systemd is installed
    type -p systemctl > /dev/null && return 1
    return 0
}

describe() {
    local suitable
    is_suitable && suitable=true || suitable=false
    cat <<EOF
---
provider:
  type: service
  invoke: simple
  actions: [list,find,update]
  suitable: ${suitable}
  attributes:
    name:
      type: string
    ensure:
      type: enum[running, stopped]
    enable:
      type: enum[true, false]
EOF
}

# Determine the state of the resource with name $name
find_state() {
    [ -z "$name" ] && die "find: missing a name"

    if [ -x "/etc/rc.d/init.d/$name" ]; then
        status $name >/dev/null 2>&1
        [ $? -eq 0 ] && is_ensure=running || is_ensure=stopped
        chkconfig $name && is_enable=true || is_enable=false
    else
        is_unknown=true
    fi
}

list() {
    local name is_ensure is_enable

    echo '# simple'

    for svc in $svc_path/*
    do
        [ ! -x $svc ] && continue
        name=$(basename $svc)
        find_state
        echo "name: $name"
        echo "ensure: $is_ensure"
        echo "enable: $is_enable"
    done
}

find() {
    echo "# simple"
    find_state
    echo "name: $name"
    if [ -z "$is_unknown" ]
    then
        echo "ensure: $is_ensure"
        echo "enable: $is_enable"
    else
        echo "ral_unknown: true"
    fi
}

# Convenience wrapper to make supporting noop easier
run() {
    if [ -z "$ral_noop" ]
    then
        msg=$("$@" 2>&1)
        rc=$?
        if [ $rc != 0 ]; then
            die "$msg"
        fi
    fi
}

update() {
    echo '# simple'
    find_state

    if [ -n "$is_unknown" ]
    then
        echo "ral_unknown: true"
        exit 0
    fi

    # Check enablement
    if [ -n "$enable" ]
    then
        case $enable
        in
            true)
                run chkconfig --level 0123456 $name on
                ;;
            false)
                run chkconfig --level 0123456 $name off
                ;;
            *) die "illegal value for enable: '$enable'"
               ;;
        esac
        echo "enable: $enable"
        echo "ral_was: $is_enable"
    fi

    if [ -n "$ensure" ]
    then
        case $ensure
        in
            running)
                run service $name start
                ;;
            stopped)
                run service $name stop
                ;;
            *)
                die "illegal value for ensure: '$ensure'"
                ;;
        esac
    fi
}

eval "$@"

case "$ral_action"
in
    list) list;;
    find) find;;
    update) update;;
    describe) describe;;
    *)
        die "Unknown action: $ral_action"
esac
